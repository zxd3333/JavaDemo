
Java程序启动的时候，实际上是启动了一个JVM进程
JVM启动主线程来执行main()方法，在main()方法中，我们又可以启动其他线程

创建线程有两个方法：1.继承Thread类，重写run()方法，创建线程对象
                  2.实现Runnable接口并重写run()方法，创建线程对象

线程的状态：
1.新建，新建一个线程对象。
        Thread t = new Thread();
2.就绪，线程创建之后，调用start()方法就进入就绪状态。
        这个状态具有执行资格，但没有执行权。
        t.start();
3.运行，进入就绪状态的线程抢占CPU的执行时间片，抢到了CPU执行时间片，执行run()方法
4.阻塞，如果一个线程在运行状态下调用了一个阻塞的API或者等待某个事件，线程就会进入阻塞状态
        同步阻塞：锁被其他线程占用
        主动阻塞：调用Thread的某些方法，例如sleep()、join()等
        等待阻塞：即执行了wait()方法
5.死亡，当线程的run()方法执行完毕或者线程出现了异常，线程就会进入死亡状态




