package com.zxd.f;

//第二部分
//根据Animal类和Cat类测试
//测试子类和父类构造方法的执行顺序
public class TestConstruction {
    public static void main(String[] args) {
        Cat cat = new Cat();
        //父类--静态代码块执行
        //子类--静态代码块执行
        //父类--普通代码块执行
        //父类--无参构造执行
        //子类--普通代码块执行
        //子类--无参构造执行

        //父类对象引用子类对象
        //可以理解为 Animal animal;   animal = new Cat();
        Animal animal = new Cat();
        //父类--普通代码块执行
        //父类--无参构造执行
        //子类--普通代码块执行
        //子类--无参构造执行

        //父类对象引用子类对象
        Animal animal1 = new Cat("小猫",20);
        //父类--普通代码块执行
        //父类--无参构造执行
        //子类--普通代码块执行
        //子类--带参构造执行
    }
}
//解析
//执行顺序：静态代码块->main->代码块->构造方法
//静态代码块会随着类的加载而加载，所以会优先执行静态代码块
//先执行父类静态代码块，再执行子类静态代码块
//但是静态代码块只会执行一次
//继续执行main方法，从上往下执行
//创建对象时，代码块会随着对象的创建而加载
//子类所有构造方法会默认访问父类无参构造方法
//因此首先执行父类的代码块和构造方法，再执行子类的代码块和构造方法
//如果子类有参数，父类执行的是无参构造，子类执行的是有参构造
